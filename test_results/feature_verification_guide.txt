# Stock Trading System Feature Verification Guide

This document provides a comprehensive guide to verify the functionality of the stock trading system. The system implements a distributed client-server architecture with multiple specialized servers following Beej's Guide to Network Programming.

## System Components

1. **Main Server (M)** - Central hub for client connections and request routing
2. **Authentication Server (A)** - Handles user authentication
3. **Portfolio Server (P)** - Manages user stock portfolios
4. **Quote Server (Q)** - Provides stock price information

## Feature Verification Process

### 1. Authentication

All users must authenticate before accessing the system. The authentication mechanism uses a simple encryption scheme for passwords.

**Test Procedure:**
1. Launch all servers using `./simplified_test.sh`
2. Connect with the client: `./client`
3. Enter valid credentials:
   - Username: `user1`, Password: `sdvv789`
   - Username: `user2`, Password: `sdvvzrug`
   - Username: `admin`, Password: `vhfuhwsdvv`
4. Check for "You have been granted access" message

**Verification:**
- Log output from Server M shows successful TCP connection acceptance
- Log output from Server M shows "Authentication successful for user X"
- Log output from Server A shows "Member X has been authenticated"

### 2. Stock Quote Retrieval

Users can view current stock prices for all stocks or a specific stock.

**Test Procedure:**
1. After authentication, type `quote` to see all stock prices
2. Type `quote S1` to see price for Stock S1

**Verification:**
- Server M log shows "Received quote request for all stocks" or specific stock
- Server Q log shows "Quote request received" and "Sending quote information"
- Client displays properly formatted stock information

### 3. Portfolio Management

Users can view their current stock portfolio.

**Test Procedure:**
1. After authentication, type `position` to view portfolio

**Verification:**
- Server M log shows "Position request for user X"
- Server P log shows "Portfolio request for user X"
- Client displays portfolio with stock names, quantities and values

### 4. Stock Trading

Users can buy and sell stocks.

**Test Procedure (Buy):**
1. Type `buy S1 5` to purchase 5 shares of S1
2. Verify the transaction details
3. Type `yes` to confirm
4. Check position with `position` command

**Test Procedure (Sell):**
1. Type `sell S1 2` to sell 2 shares of S1
2. Verify the transaction details
3. Type `yes` to confirm
4. Check position with `position` command

**Verification:**
- Server logs show transaction processing
- Portfolio is updated correctly
- Client receives confirmation messages

## Network Infrastructure Verification

The system uses TCP for client-server communication and UDP for inter-server communication.

**Network Configuration Verification:**
- Server M listens on TCP port 45000 and UDP port 44000
- Server A listens on UDP port 41000
- Server P listens on UDP port 42000
- Server Q listens on UDP port 43000

**Connection Handling Verification:**
- Multiple clients can connect simultaneously
- Timeouts prevent server hang on network issues
- Resources are properly released on client disconnect

## Error Recovery

The system should handle error conditions gracefully.

**Test Cases:**
1. Invalid authentication: Use incorrect password
2. Invalid commands: Type malformed commands
3. Service interruption: Stop and restart servers during operation

**Verification:**
- Appropriate error messages are displayed
- No resource leaks occur
- System recovers to operational state

## Signal Handling

All components properly handle termination signals.

**Test Procedure:**
1. Launch all servers
2. Press Ctrl+C in server terminal
3. Verify clean shutdown messages

**Verification:**
- Server logs show "Caught SIGINT signal, cleaning up and exiting" message
- All sockets are closed before termination